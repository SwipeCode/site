import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { api } from "../utils/api";

import { Canvas } from "@react-three/fiber";
import { useFrame } from '@react-three/fiber'
import { useState } from "react";

const Scene = () => {
  return (
    <Canvas>
      <ambientLight />
      <pointLight position={[10, 10, 10]} />

    <MyAnimatedBox />
      
    </Canvas>
  );
};

function MyAnimatedBox() {

  const [position, setPosition] = useState([0, 0, 0])
  const [rotation, setRotation] = useState([0, 0, 0])
  const [scale, setScale] = useState(0)
  const [color, setColor] = useState("")

  useFrame(({clock}) => {
    const a = clock.getElapsedTime()
    
    setPosition([Math.tan(a), 0, Math.tan(a)])
    setRotation([a, a, a])

    //  [Math.floor(Math.random() * 255),Math.floor(Math.random() * 255),Math.floor(Math.random() * 255)]
    // set an rgb value based on the time

    // gradient the color based on the time
    const r = Math.floor(Math.sin(a) * 127 + 128)
    const g = Math.floor(Math.sin(a + 2) * 127 + 128)
    const b = Math.floor(Math.sin(a + 4) * 127 + 128)


    // convert the rgb values to a hex value
    const hex = "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)

    // set the color
    setColor(hex)
    
  })


  return (
    <mesh rotation={rotation} position={position} scale={[2,1,1]}>
      <boxGeometry />
      <meshBasicMaterial color={color} />
    </mesh>
  )
}


const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <Scene />
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Swipecode <span className="text-[hsl(280,100%,70%)]">Enterprises</span>
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps →</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation →</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <p className="text-2xl text-white">
            {hello.data ? hello.data.greeting : "Loading tRPC query..."}
          </p>
        </div>
      </main>
    </>
  );
};

export default Home;
